# Database Configuration
MONGODB_URI=mongodb://localhost:27017/blogdb
# For Azure Cosmos DB, use:
# MONGODB_URI=mongodb://your-cosmosdb-account.mongo.cosmos.azure.com:10255/your-database?ssl=true&replicaSet=globaldb&retrywrites=false&maxIdleTimeMS=120000&appName=@your-cosmosdb-account@

# Server Configuration
PORT=5000
NODE_ENV=development

# Frontend URL for CORS
FRONTEND_URL=http://localhost:3000

# Authentication & Security
# IMPORTANT: Generate a strong JWT secret for production!
# Use: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=your-super-secret-jwt-key-here-change-in-production-must-be-at-least-32-chars-long-for-security

# Admin Authentication (DEPRECATED - use setup endpoint instead)
# ADMIN_PASSWORD is now only used for legacy compatibility
# The new system requires initial setup via /api/auth/setup
ADMIN_PASSWORD=admin123

# Session & Security Configuration
SESSION_SECRET=your-session-secret-here-also-change-in-production
COOKIE_SECURE=false
# Set COOKIE_SECURE=true in production with HTTPS

# Rate Limiting Configuration
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100
AUTH_RATE_LIMIT_MAX_ATTEMPTS=5
AUTH_RATE_LIMIT_WINDOW_MS=900000

# Security Headers
CSP_REPORT_ONLY=false
TRUST_PROXY=false
# Set TRUST_PROXY=true if behind a reverse proxy (nginx, cloudflare, etc.)
