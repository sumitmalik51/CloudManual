import React, { useState } from 'react';
import { Link, useLocation } from 'react-router-dom';
import { blogAPI } from '../../utils/api';
import DarkModeToggle from '../ui/DarkModeToggle';

const Header: React.FC = () => {
  const location = useLocation();
  const isAdmin = blogAPI.isAuthenticated();
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  
  const isActivePath = (path: string) => {
    return location.pathname === path;
  };

  const handleLogout = () => {
    blogAPI.logout();
    window.location.href = '/';
  };

  return (
    <>
      {/* GitSecureOps inspired custom CSS animations */}
      <style dangerouslySetInnerHTML={{
        __html: `
          @keyframes headerMinimalGradient {
            0% { 
              background-position: 0% 50%;
              transform: translateX(0%);
            }
            50% { 
              background-position: 100% 50%;
              transform: translateX(1%);
            }
            100% { 
              background-position: 0% 50%;
              transform: translateX(0%);
            }
          }
          
          .header-gradient-text {
            background: linear-gradient(110deg, #2563eb, #7c3aed, #06b6d4, #10b981);
            background-size: 250% 250%;
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
            animation: headerMinimalGradient 6s ease-in-out infinite;
            font-weight: 700;
            filter: contrast(1.05) brightness(1.02);
          }

          .header-logo-glow {
            background: linear-gradient(135deg, #2563eb, #7c3aed, #06b6d4);
            animation: headerMinimalGradient 8s ease-in-out infinite;
            box-shadow: 0 4px 15px rgba(37, 99, 235, 0.3);
          }

          .nav-link-hover {
            position: relative;
            overflow: hidden;
          }

          .nav-link-hover::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(45deg, transparent 30%, rgba(37, 99, 235, 0.1) 50%, transparent 70%);
            transform: translateX(-100%);
            transition: transform 0.6s ease;
          }

          .nav-link-hover:hover::before {
            transform: translateX(100%);
          }
        `
      }} />

      <header className="landing-page-header bg-white/95 dark:bg-gray-900/95 backdrop-blur-md border-b border-gray-200 dark:border-gray-700 shadow-lg sticky top-0 z-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-16">
            {/* Logo/Brand with GitSecureOps styling */}
            <div className="flex items-center space-x-3 flex-shrink-0">
              <div className="w-10 h-10 header-logo-glow rounded-lg flex items-center justify-center shadow-lg">
                <span className="text-white text-lg font-bold">‚òÅÔ∏è</span>
              </div>
              <div>
                <Link 
                  to="/" 
                  className="text-xl font-bold header-gradient-text hover:scale-105 transition-transform duration-300"
                >
                  CloudManual
                </Link>
                <p className="text-xs text-gray-600 dark:text-gray-400">Professional Blog</p>
              </div>
            </div>

            {/* Desktop Navigation */}
            <nav className="hidden md:flex items-center space-x-8">
              <Link
                to="/"
                className={`nav-link-hover px-3 py-2 rounded-xl text-sm font-medium transition-all duration-300 ${
                  isActivePath('/') 
                    ? 'text-white bg-gradient-to-r from-blue-600 to-purple-600 shadow-lg' 
                    : 'text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 hover:bg-blue-50 dark:hover:bg-gray-700'
                }`}
              >
                Home
              </Link>
              <Link
                to="/blog"
                className={`nav-link-hover px-3 py-2 rounded-xl text-sm font-medium transition-all duration-300 ${
                  isActivePath('/blog') 
                    ? 'text-white bg-gradient-to-r from-blue-600 to-purple-600 shadow-lg' 
                    : 'text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 hover:bg-blue-50 dark:hover:bg-gray-700'
                }`}
              >
                Blog
              </Link>
              <Link
                to="/about"
                className={`nav-link-hover px-3 py-2 rounded-xl text-sm font-medium transition-all duration-300 ${
                  isActivePath('/about') 
                    ? 'text-white bg-gradient-to-r from-blue-600 to-purple-600 shadow-lg' 
                    : 'text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 hover:bg-blue-50 dark:hover:bg-gray-700'
                }`}
              >
                About
              </Link>
            </nav>

            {/* Admin/Auth Section */}
            <div className="flex items-center space-x-4">
              {/* Dark Mode Toggle */}
              <DarkModeToggle />
              
              {isAdmin ? (
                <div className="flex items-center space-x-3">
                  <Link
                    to="/admin"
                    className="group relative bg-gradient-to-r from-green-500 to-blue-600 hover:from-green-600 hover:to-blue-700 text-white px-4 py-2 rounded-xl font-medium transition-all duration-300 transform hover:scale-105 hover:shadow-lg overflow-hidden"
                  >
                    <span className="relative z-10 flex items-center gap-2">
                      <span>üõ°Ô∏è</span>
                      Admin
                    </span>
                    <div className="absolute inset-0 bg-gradient-to-r from-white/0 via-white/10 to-white/0 transform translate-x-[-100%] group-hover:translate-x-[100%] transition-transform duration-700"></div>
                  </Link>
                  <button
                    onClick={handleLogout}
                    className="group relative bg-gradient-to-r from-red-500 to-pink-600 hover:from-red-600 hover:to-pink-700 text-white px-4 py-2 rounded-xl font-medium transition-all duration-300 transform hover:scale-105 hover:shadow-lg overflow-hidden"
                  >
                    <span className="relative z-10 flex items-center gap-2">
                      <span>üö™</span>
                      Logout
                    </span>
                    <div className="absolute inset-0 bg-gradient-to-r from-white/0 via-white/10 to-white/0 transform translate-x-[-100%] group-hover:translate-x-[100%] transition-transform duration-700"></div>
                  </button>
                </div>
              ) : (
                <Link
                  to="/admin/login"
                  className="group relative bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700 text-white px-6 py-2.5 rounded-xl font-medium transition-all duration-300 transform hover:scale-105 hover:shadow-lg overflow-hidden border border-blue-500/20"
                >
                  <span className="relative z-10 flex items-center gap-2">
                    Admin Login
                    <svg className="w-4 h-4 transition-transform duration-300 group-hover:translate-x-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 7l5 5m0 0l-5 5m5-5H6" />
                    </svg>
                  </span>
                  <div className="absolute inset-0 bg-gradient-to-r from-white/0 via-white/10 to-white/0 transform translate-x-[-100%] group-hover:translate-x-[100%] transition-transform duration-700"></div>
                </Link>
              )}
            </div>

            {/* Mobile menu button */}
            <div className="md:hidden">
              <button
                type="button"
                onClick={() => setIsMenuOpen(!isMenuOpen)}
                className="text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 focus:outline-none transition-colors duration-200 p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700"
                aria-label="Open menu"
              >
                <svg className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16M4 18h16" />
                </svg>
              </button>
            </div>
          </div>

          {/* Mobile Navigation Menu */}
          {isMenuOpen && (
            <div className="md:hidden border-t border-gray-200 dark:border-gray-700 py-4 animate-fade-in">
              <div className="flex flex-col space-y-4">
                <Link
                  to="/"
                  className="nav-link-hover block px-3 py-2 rounded-xl text-base font-medium text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 hover:bg-gray-50 dark:hover:bg-gray-700 transition-all duration-300"
                  onClick={() => setIsMenuOpen(false)}
                >
                  Home
                </Link>
                <Link
                  to="/blog"
                  className="nav-link-hover block px-3 py-2 rounded-xl text-base font-medium text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 hover:bg-gray-50 dark:hover:bg-gray-700 transition-all duration-300"
                  onClick={() => setIsMenuOpen(false)}
                >
                  Blog
                </Link>
                <Link
                  to="/about"
                  className="nav-link-hover block px-3 py-2 rounded-xl text-base font-medium text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 hover:bg-gray-50 dark:hover:bg-gray-700 transition-all duration-300"
                  onClick={() => setIsMenuOpen(false)}
                >
                  About
                </Link>
                {isAdmin && (
                  <Link
                    to="/admin"
                    className="nav-link-hover block px-3 py-2 rounded-xl text-base font-medium text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 hover:bg-gray-50 dark:hover:bg-gray-700 transition-all duration-300"
                    onClick={() => setIsMenuOpen(false)}
                  >
                    Admin
                  </Link>
                )}
              </div>
            </div>
          )}
        </div>
      </header>
    </>
  );
};

export default Header;
